name: Production Environment Deployment

on:
  push:
    branches:
      - main
      - dev/prod

jobs:
  validate:
    name: Validate Infrastructure
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.5.0'
          
      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'v3.12.0'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pylint yamllint kubernetes-validate
          pip install -r requirements.txt
          
      - name: Run all validation steps
        run: |
          chmod +x ./scripts/validate_helm.sh
          chmod +x ./scripts/validate_terraform.sh
          chmod +x ./scripts/security_scan.sh
          
          ./scripts/validate_helm.sh
          ./scripts/validate_terraform.sh
          ./scripts/security_scan.sh
          
          pytest tests/unit/
          pytest tests/integration/
          
          python ./scripts/deployment_validation.py

  approve:
    name: Manual Approval
    needs: validate
    runs-on: ubuntu-latest
    steps:
      - name: Manual approval for production deployment
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ secrets.GITHUB_TOKEN }}
          approvers: admin1,admin2,admin3
          minimum-approvals: 2
          issue-title: "Approve production deployment"
          issue-body: "Please approve the production deployment"
          exclude-workflow-initiator-as-approver: false

  deploy:
    name: Deploy Infrastructure
    needs: [validate, approve]
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
          
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.5.0'
          
      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'v3.12.0'
          
      - name: Configure kubectl
        uses: google-github-actions/get-gke-credentials@v1
        with:
          cluster_name: ${{ secrets.GKE_CLUSTER_NAME }}
          location: ${{ secrets.GKE_LOCATION }}
          
      - name: Initialize Terraform
        run: |
          cd terraform/environments/prod
          terraform init
          
      - name: Terraform plan
        id: plan
        run: |
          cd terraform/environments/prod
          terraform plan -out=tfplan
          
      - name: Terraform apply
        run: |
          cd terraform/environments/prod
          terraform apply -auto-approve tfplan
          
      - name: Deploy Helm charts
        run: |
          helm upgrade --install gke-cluster ./helm/charts/gke-cluster -f ./helm/environments/prod/values.yaml
          helm upgrade --install security ./helm/charts/security -f ./helm/environments/prod/values.yaml
          helm upgrade --install apis ./helm/charts/apis -f ./helm/environments/prod/values.yaml
          
      - name: Verify deployment
        run: |
          python ./scripts/verify_deployment.py --environment prod
          
      - name: Notify deployment status
        if: always()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: deployments
          SLACK_TITLE: Production Deployment
          SLACK_MESSAGE: "Production environment deployment ${{ job.status }}"
          SLACK_COLOR: ${{ job.status }}
